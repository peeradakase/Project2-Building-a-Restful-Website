<%- contentFor('styles') %>
<link rel="stylesheet" href="/styles/products.css" />

<%- contentFor('body') %>
<div id="pages-my-wishlists-index" class="container"></div>
<div>
  <div class="container text-center">
    <div class="row">
      <div class="col-6">
        <div id="product-images"></div>
      </div>

      <div class="col-5">
        <div class="description-product">
          <h5 id="product-name" class="text-description-center"></h5>
          <h5 class="text-description-center">
            <span id="product-price" class="text-description-center"></span>
            <span>HKD</span>
          </h5>

          <p class="text-left">Color: Select a color</p>
          <div class="product-color-box">
            <button data-color="white" class="white m-l-r-5"></button>
            <button data-color="purple" class="purple m-l-r-5"></button>
            <button data-color="black" class="black m-l-r-5"></button>
          </div>

          <p class="text-description-center">Size: Select a size</p>
          <div class="box-size-buttons">
            <button data-size="XXS" type="button" class="m-l-r-5 btn btn-outline-dark">XXS</button>
            <button data-size="XS" type="button" class="m-l-r-5 btn btn-outline-dark">XS</button>
            <button data-size="S" type="button" class="m-l-r-5 btn btn-outline-dark">S</button>
            <button data-size="M" type="button" class="m-l-r-5 btn btn-outline-dark">M</button>
            <button data-size="L" type="button" class="m-l-r-5 btn btn-outline-dark">L</button>
            <button data-size="XL" type="button" class="m-l-r-5 btn btn-outline-dark">XL</button>
          </div>

          <div class="m-t-10 row m-b-20">
            <div class="col-2 text-left">
              Pieces
            </div>
            <div class="col-3">
              <input
              id="product-amount"
              min="1"
              type="number"
              class="form-control"
              value="1"
              required
              >
            </div>

          </div>

          <button
          id="buy-button"
          type="button" class="buy-button btn btn-outline-dark">
            BUY
          </button>
          <a
          id="signup-button"
          href="#"
          class="buy-button btn btn-outline-dark"
          >Sign up
        </a>
        </div>
      </div>
    </div>
  </div>
</div>

<%- contentFor('scripts') %>
<script>
  // Find product Id from url
  console.log(window.location.href, ":window.location.href");
  console.log(window.location.href.split("/"), ":window.location.href.split");
  console.log(
    window.location.href.split("/").reverse(),
    ":window.location.href.split.reverse()"
  );

  const productId = window.location.href.split("/").reverse()[0];
  let size = null;
  let color = null;
  // browserขอข้อมูลจาก routeนี้
  axios
    .get(`/api/products/${productId}`)
    //ถ้า get ทำงานเสด .thenถ้าจะเริ่มทำงาน
    .then((result) => {
      //result คือข้อมูล ที่Apiคืนมาให้เรา ในรูปobj
      //data คือ key ที่เป็นก้อนobjใหญ่
      //id, name, price, image พวกนี้คือ keyในก้อนobjเล็ก
      //ถ้าอยากเหนภาพ ให้ดูในconsole.log
      const {
        data: { id, name, price, images },
      } = result;
      console.log("result: ", result);

      $("#product-name").text(name);
      $("#product-price").text(price);

      //TODO: add buy product action

      //for (let = i; i < images.length; i+=1) {
      //  images[i].url วนทุกรูปในurl(ที่อยู่ของรูปเรา)ที่อยุ่ในobj
      //}
      images.forEach((image) => {
        $("#product-images").append(
          `<div><img class="heart-t-1" src="${image.url}" alt=""></div>`
        );
      });
    });

  // Color Buttn is clicked
  $(".product-color-box button").click(function (e) {
    //remove Active class from all button
    $(".product-color-box button").removeClass("active");
    //add Active class to button which is clicked
    $(this).addClass("active");
    color = $(this).attr('data-color');
  });

  $('.box-size-buttons button').click(function (e) {

    $(".box-size-buttons button").removeClass("active");
    $(this).addClass("active");
    size = $(this).attr('data-size');
  });

  function getAccountDetailAndShowButton() {
    axios.get('/api/my/account-detail')
      .then((result) => {
        $('#signup-button').hide();
        $('#buy-button').show();
      })
      .catch(() => {
        $('#signup-button').show();
        $('#buy-button').hide();
      })
  }

  $('#buy-button').click(function () {
    if (!color) {
      alert('Please Select Color')
      return
    }

    if (!size) {
      alert('Please Select Size')
      return
    }

    const data = {
      color,
      size,
      quantity: parseInt($('#product-amount').val()),
      productId: parseInt(productId)
    }

    axios.post('/api/orders' ,data, {
      headers: {
        'Content-Type': 'application/json',
      }
    }).then(() => {
      window.location.href = '/my/orders/confirmation'
    }).catch(() => {
      alert('Failed Buy Order please try again');
    })

  })

  getAccountDetailAndShowButton()

  $('#signup-button').attr('href', `/auth/signup?previous_page=/products/${productId}`)
</script>
